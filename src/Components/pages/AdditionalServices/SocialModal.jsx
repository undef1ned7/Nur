import React, { useMemo, useState } from "react";
import { useSelector } from "react-redux";
import { submitAdditionalServicesRequest } from "../../../api/additionalServices";
import "./SocialModal.scss";
import {
  FaInstagram,
  FaTelegram,
  FaWhatsapp,
  FaWarehouse,
} from "react-icons/fa";
import { MdDocumentScanner } from "react-icons/md";

const SocialModal = ({ isOpen, onClose, selectedSocial }) => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState(null);
  const { company } = useSelector((state) => state.user);

  const isConsulting = useMemo(() => {
    const name = (company?.name || "").toLowerCase();
    const sector = company?.sector?.name || company?.industry?.name || "";
    return name === "consulting" || sector === "–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥";
  }, [company]);

  // –ö–∞—Ä—Ç–∞ –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
  const serviceMap = useMemo(
    () => ({
      whatsapp: {
        title: "WhatsApp",
        description:
          "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
        icon: <FaWhatsapp />,
      },
      telegram: {
        title: "Telegram",
        description:
          "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
        icon: <FaTelegram />,
      },
      instagram: {
        title: "Instagram",
        description:
          "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ —á–∞—Ç—ã –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –±—ã—Å—Ç—Ä—ã—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–µ–π CRM-—Å–∏—Å—Ç–µ–º–æ–π.",
        icon: <FaInstagram />,
      },
      documents: {
        title: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
        description:
          "–°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤, —Å—á—ë—Ç–æ–≤ –∏ –∞–∫—Ç–æ–≤. –®–∞–±–ª–æ–Ω—ã, —Å—Ç–∞—Ç—É—Å—ã –∏ –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º.",
        icon: <MdDocumentScanner />,
      },
      warehouse: {
        title: "–°–∫–ª–∞–¥",
        description:
          "–£—á–µ—Ç —É—Å–ª—É–≥/–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–∞: –ø—Ä–∏—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥, –æ—Å—Ç–∞—Ç–∫–∏, –ø–∞—Ä—Ç–∏–∏ –∏ —Å–≤—è–∑—å —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏.",
        icon: <FaWarehouse />,
        // –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥–µ
        requiresConsulting: true,
      },
    }),
    []
  );

  const socialInfo = (selectedSocial && serviceMap[selectedSocial]) || {
    title: "–°–µ—Ä–≤–∏—Å",
    description: "–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏",
    icon: "üîó",
  };

  const submitDisabled =
    isSubmitting ||
    !company ||
    (socialInfo?.requiresConsulting && !isConsulting);

  const submitDisabledReason = !company
    ? "–ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    : socialInfo?.requiresConsulting && !isConsulting
    ? "–°–∫–ª–∞–¥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ñ–µ—Ä—ã ¬´–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥¬ª"
    : null;

  const handleSubmit = async () => {
    if (!company) {
      setSubmitStatus({
        type: "error",
        message: "–û—à–∏–±–∫–∞: –∫–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
      });
      return;
    }

    if (socialInfo?.requiresConsulting && !isConsulting) {
      setSubmitStatus({
        type: "error",
        message: "–°–∫–ª–∞–¥ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ñ–µ—Ä—ã ¬´–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥¬ª.",
      });
      return;
    }

    setIsSubmitting(true);
    setSubmitStatus(null);

    try {
      const serviceTitle = socialInfo.title || selectedSocial;

      const requestData = {
        company: company.name, // –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ company.id
        service: selectedSocial, // —Å–æ—Ö—Ä–∞–Ω—è–µ–º id —Å–µ—Ä–≤–∏—Å–∞ –∫–∞–∫ –ø–æ–ª–µ
        text: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ª—É–≥–∏: ${serviceTitle}`,
        status: "new",
      };

      await submitAdditionalServicesRequest(requestData);

      setSubmitStatus({
        type: "success",
        message: "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
      });

      setTimeout(() => {
        onClose();
        setSubmitStatus(null);
      }, 1500);
    } catch (error) {
      setSubmitStatus({
        type: "error",
        message: error?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="social-modal-overlay" onClick={onClose}>
      <div
        className="social-modal-content"
        onClick={(e) => e.stopPropagation()}
      >
        <button className="social-modal-close" onClick={onClose}>
          &times;
        </button>

        <div className="social-modal-header">
          <div className="social-modal-icon">{socialInfo.icon}</div>
          <h2>–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {socialInfo.title}</h2>
        </div>

        <div className="social-modal-body">
          <p className="social-modal-description">{socialInfo.description}</p>

          {submitDisabledReason && (
            <div className="social-modal-hint">{submitDisabledReason}</div>
          )}

          {submitStatus && (
            <div
              className={`social-modal-status social-modal-status--${submitStatus.type}`}
            >
              {submitStatus.message}
            </div>
          )}
        </div>

        <div className="social-modal-actions">
          <button
            className="social-modal-button social-modal-button--cancel"
            onClick={onClose}
            disabled={isSubmitting}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            className="social-modal-button social-modal-button--submit"
            onClick={handleSubmit}
            disabled={submitDisabled}
            title={submitDisabledReason || ""}
          >
            {isSubmitting ? (
              <>
                <span className="social-modal-spinner"></span>
                –û—Ç–ø—Ä–∞–≤–∫–∞...
              </>
            ) : (
              "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
            )}
          </button>
        </div>
      </div>
    </div>
  );
};

export default SocialModal;
